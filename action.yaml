name: 'Bandit'
description: 'Security Lint Python code with Bandit'
author: 'ixxeL'
inputs:
  format:
    description: 'Format errors according to the chosen formatter [csv,custom,html,json,screen,txt,xml,yaml]'
    required: false
    default: 'screen'
  exit-zero:
    description: 'Exit with status code "0" even if there are errors'
    required: false
    default: 'true'
  security:
    description: 'report only issues of a given severity level or higher [all, low, medium, high]'
    required: false
    default: 'all'
  confidence:
    description: 'report only issues of a given confidence level or higher [all, low, medium, high]'
    required: false
    default: 'all'
  output-file:
    description: 'Redirect report to a file'
    required: false
    default: '""'    
  working-dir:
    description: 'directory in which to find the Dockerfile'
    required: false
    default: '.'

runs:
  using: "composite"
  steps:
    - id: bandit
      run: |
        echo -e "${BLUE}[ STEP - SECURITY LINTING CODE ] > Code security linting with Bandit.${BLANK}"
        echo -e "${CYAN}[ INFO ] > Bandit version.${BLANK}"
        bandit --version
        echo -e "${YELLOW}[ EXECUTING ] > Executing code security linting.${BLANK}"
        if [[ ${{ inputs.exit-zero }} = true ]]
        then
          echo -e "${CYAN}[ INFO ] > Exit zero mode forced.${BLANK}"
          EXIT_ZERO="--exit-zero"
        else
          EXIT_ZERO=""
        fi
        if [[ -z ${OUTPUT} ]]
        then
          echo -e "${CYAN}[ INFO ] > No output file.${BLANK}"
          OUTPUT=""
        else
          echo -e "${CYAN}[ INFO ] > Output file provided --> ${OUTPUT}.${BLANK}"
          OUTPUT="--output ${OUTPUT}"
        fi

        if [[ ${FORMAT} = "json" ]]
        then
          bandit --verbose \
                --recursive \
                --severity-level ${SECURITY} \
                --confidence-level ${CONFIDENCE} \
                --format ${FORMAT} \
                ${OUTPUT} \
                ${{ inputs.exit-zero }} \
                ${WORKINGDIR} | jq -C
        else
          bandit --verbose \
                --recursive \
                --severity-level ${SECURITY} \
                --confidence-level ${CONFIDENCE} \
                --format ${FORMAT} \
                ${OUTPUT} \
                ${{ inputs.exit-zero }} \
                ${WORKINGDIR}
        fi
        EXIT_CODE="${PIPESTATUS[0]}"
        if [[ ${EXIT_CODE} -ne 0 ]]
        then
          echo -e "${RED}[ FAIL ] > Bandit scan failed.${BLANK}"
          exit ${EXIT_CODE}
        else
          echo -e "${GREEN}[ SUCCESS ] > Bandit scan succeeded.${BLANK}"
        fi
      shell: bash
      env:
        RED: \033[1;31m
        GREEN: \033[1;32m
        YELLOW: \033[1;33m
        BLUE: \033[1;34m
        PURPLE: \033[1;35m
        CYAN: \033[1;36m
        BLANK: \033[0m